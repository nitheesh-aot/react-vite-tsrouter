/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OidcCallbackImport } from './routes/oidc-callback'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as PlansIndexImport } from './routes/Plans/index'
import { Route as PlansPlanIdImport } from './routes/Plans/$planId'

// Create Virtual Routes

const NewpageLazyImport = createFileRoute('/newpage')()

// Create/Update Routes

const NewpageLazyRoute = NewpageLazyImport.update({
  path: '/newpage',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/newpage.lazy').then((d) => d.Route))

const OidcCallbackRoute = OidcCallbackImport.update({
  path: '/oidc-callback',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const PlansIndexRoute = PlansIndexImport.update({
  path: '/Plans/',
  getParentRoute: () => rootRoute,
} as any)

const PlansPlanIdRoute = PlansPlanIdImport.update({
  path: '/Plans/$planId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/oidc-callback': {
      id: '/oidc-callback'
      path: '/oidc-callback'
      fullPath: '/oidc-callback'
      preLoaderRoute: typeof OidcCallbackImport
      parentRoute: typeof rootRoute
    }
    '/newpage': {
      id: '/newpage'
      path: '/newpage'
      fullPath: '/newpage'
      preLoaderRoute: typeof NewpageLazyImport
      parentRoute: typeof rootRoute
    }
    '/Plans/$planId': {
      id: '/Plans/$planId'
      path: '/Plans/$planId'
      fullPath: '/Plans/$planId'
      preLoaderRoute: typeof PlansPlanIdImport
      parentRoute: typeof rootRoute
    }
    '/Plans/': {
      id: '/Plans/'
      path: '/Plans'
      fullPath: '/Plans'
      preLoaderRoute: typeof PlansIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  OidcCallbackRoute,
  NewpageLazyRoute,
  PlansPlanIdRoute,
  PlansIndexRoute,
  UsersIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/oidc-callback",
        "/newpage",
        "/Plans/$planId",
        "/Plans/",
        "/users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/oidc-callback": {
      "filePath": "oidc-callback.tsx"
    },
    "/newpage": {
      "filePath": "newpage.lazy.tsx"
    },
    "/Plans/$planId": {
      "filePath": "Plans/$planId.tsx"
    },
    "/Plans/": {
      "filePath": "Plans/index.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
