name: SCAFFOLD API CI

on:
  pull_request:
    branches:
      - develop
    paths:
      - "scaffold-api/**"

defaults:
  run:
    shell: bash
    working-directory: ./scaffold-api

jobs:
  setup-job:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - run: "true"

  linting:
    needs: setup-job
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libsasl2-dev libldap2-dev libssl-dev --yes
          make setup
      - name: Lint with pylint
        id: pylint
        run: |
          make pylint
      - name: Lint with flake8
        id: flake8
        run: |
          make flake8


  testing:
     needs: setup-job
     env:
       FLASK_ENV: "testing"
       DATABASE_TEST_URL: "postgresql://postgres:postgres@localhost:5432/postgres"

     runs-on: ubuntu-20.04

     services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

     steps:
       - uses: actions/checkout@v2
         with:
           fetch-depth: 0
       - name: Set up Python ${{ matrix.python-version }}
         uses: actions/setup-python@v1
         with:
           python-version: ${{ matrix.python-version }}
       - name: Install dependencies
         run: |
           make setup
       - name: Test
         id: test
         run: |
           make test

       - name: Sets Codecov branch name
         run: |
            echo "CODECOV_BRANCH=PR_${{github.head_ref}}" >> $GITHUB_ENV
         if: github.event_name == 'pull_request'
          
       - name: Upload coverage to Codecov
         uses: codecov/codecov-action@v3
         with:
          flags: scaffold-api
          name: codecov-scaffold-api
          fail_ci_if_error: true   
          verbose: true 
          override_branch: ${{env.CODECOV_BRANCH}}
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    # needs: PyTest
    runs-on: ubuntu-20.04
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build
        run: |
          docker build . -t reports-api
